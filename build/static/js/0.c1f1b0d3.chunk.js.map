{"version":3,"sources":["redux/jobs/actions.ts"],"names":["getClearJobs","type","actionTypes","callCategories","a","NetworkOps","get","Urls","jobTypeList","response","status_code","success","categories","result","resultData","profileTemplateList","setLoading","data","setShowToast","message","updateMileStoneIndex","index","payload","updateMileStoneTimings","timings","addTemplate","postToJson","createTemplate","getMileStoneByTempId","id","url","milestones","updateDetailScreen","createPostJob","createJob","setHomeBuilder","isHandleChanges","getTradieQuestionList","showLoading","tradieQuestionList","jobId","page","list","getTradieReviewList","userType","storageService","getItem","reviewList","tradieReviewList","builderProfileReviewList","builderId","postAskQuestion","askQuestion","questionData","deleteQuestion","delete","updateQuestion","putToJson","reviewBuilder","updateReviewBuilder","deleteReviewBuilder","reviewId","removeReviewBuilder","getBuildersJob","tradieReviewReply","tradieUpdateReviewReply","tradieRemoveReviewReply","replyId","getBuilderProfile","setSkeletonLoading","builderProfile","status","getActiveJobList","getAppliedJobList","getPastJobList","resetActiveJobList","resetAppliedJobList","resetPastJobList","resetNewJobList","resetApprovedMilestoneList","getNewJobList","getApprovedMilestoneList","getActiveJobsBuilder","getOpenJobsBuilder","getPastJobsBuilder","getNewApplicantsBuilder","getnewJobApplicationListBuilder","item","getNewApprovalList","getMilestoneList","markMilestoneComplete","callback","getTradieReviewListOnBuilder","getAcceptDeclineTradie","getQuestionsList","questionList","answerQuestion","askNestedQuestion","updateAnswer","deleteAnswer","questionId","answerId","reviewReply","updateReviewReply","removeReviewReply","getTradeReviews","tradieProfileReviewList","tradieId","getTradeProfile","tradieProfile","ratingTradieProfile","reviewTradie","getJobDetails","jobDetailsTradie","lodgeDispute","jobBuilder","tradielodgeDispute","tradieLodgeDispute","CancelJob","tradieCancelJob","InviteForJob","CancelInviteForJob","invitationId","changeRequest","replyCancellation","replyChangeRequest","acceptDeclineJobInvitation","isDisable","msg","SaveTradie","isSave","HomeTradieProfile","jobHome","AddVoucher","ChooseJob","getVouchers","tradieProfileVoucher","republishJob","isJobRepublish","getOpenJobDetails","job","publishJobAgain","publishOpenJobAgain","handleCancelReply","invitedJobIds","home","getSavedTradies","profile","getCardList","payment","addNewCard","updateCard","deleteCard","lastUsedCard","fetchVouchesJobs","updateTemplate","updateReviewTradie","deleteReviewTradie","deleteOpenJob","getJobsBWTradieBuilder","getChatJobList","oppUserId","perPage","user_type","getPopularTradies","long","lat","getRecommendedTradies","getMostViewedTradies"],"mappings":"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","file":"static/js/0.c1f1b0d3.chunk.js","sourcesContent":["import NetworkOps, { FetchResponse } from \"../../network/NetworkOps\";\nimport Urls from \"../../network/Urls\";\nimport * as actionTypes from './constants';\nimport { setShowToast, setLoading, setSkeletonLoading } from '../common/actions';\nimport storageService from '../../utils/storageService';\n\nexport const getClearJobs = () => ({ type: actionTypes.GET_CLEAR_JOBS });\n\n//jobTypeList\nexport const callCategories = async () => {\n  const response: FetchResponse = await NetworkOps.get(Urls.jobTypeList);\n\n  if (response.status_code === 200) {\n    return { success: true, categories: response.result.resultData };\n  }\n\n  return { success: false };\n}\n\n\n// profileTemplateList\nexport const profileTemplateList = async () => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(Urls.profileTemplateList);\n  setLoading(false);\n\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\n// milestones\nexport const callMilestones = async () => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(Urls.milestones);\n  setLoading(false);\n\n  if (response.status_code === 200) {\n    return { success: true, milestones: response.result.resultData };\n  }\n\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\n// Update Edit-MileStone\nexport const updateMileStoneIndex = (index: any) => ({ type: actionTypes.EDIT_MILESTONE_ID, payload: index });\nexport const updateMileStoneTimings = (timings: any) => ({ type: actionTypes.EDIT_MILESTONE_TIMINGS, payload: timings });\n\n\n// Save Template\nexport const addTemplate = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(Urls.createTemplate, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\n//Get milestone by template-id\nexport const getMileStoneByTempId = async (id: any) => {\n  setLoading(true);\n  let url = `${Urls.milestones}?tempId=${id}`;\n  const response: FetchResponse = await NetworkOps.get(url);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\n// Detail Page {currentScreen:12, editItems: {}}\nexport const updateDetailScreen = (data: any) => ({ type: actionTypes.EDIT_DETAIL_SCREEN, payload: data });\n\n// Job Post \nexport const createPostJob = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(Urls.createJob, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const setHomeBuilder = (data: any) => ({ type: actionTypes.FETCH_HOME_BUILDER, data });\n\nexport const getBuilderHomeData = async (item: any) => {\n  let url = `${Urls.home}?lat=${item.lat}&long=${item.long}`\n  const response: FetchResponse = await NetworkOps.get(url);\n  console.log({ response }, '---------------!!!!!!!!')\n  if (response.status_code === 200) {\n    return { status: true, response: response.result };\n  }\n  return { status: false }\n}\n\nexport const isHandleChanges = (data: any) => ({ type: actionTypes.GET_LOCAL_CHANGES, data });\n\nexport const getTradieQuestionList = async (data: any, showLoading?: boolean) => {\n  if(showLoading) setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(Urls.tradieQuestionList + `?jobId=${data.jobId}&page=${data.page}`);\n  if(showLoading) setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result?.list };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const getTradieReviewList = async (data: any) => {\n  //applying condition to get review list of builder, when logged in either by tradie/builder\n  const userType: any = storageService.getItem('userType');\n  const reviewList: string = userType === 1 ? Urls.tradieReviewList : Urls.builderProfileReviewList;\n  const response: FetchResponse = await NetworkOps.get(reviewList + `?${userType === 1 ? 'builderId' : 'tradieId'}=${data.builderId}&page=${data.page}`);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const postAskQuestion = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(Urls.askQuestion, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    setShowToast(true, response.message);\n    return { success: true, data: { questionData: response.result } };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const deleteQuestion = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.delete(Urls.deleteQuestion, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    setShowToast(true, response.message);\n    return { success: true };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const updateQuestion = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.putToJson(Urls.updateQuestion, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    setShowToast(true, response.message);\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const reviewBuilder = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(Urls.reviewBuilder, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const updateReviewBuilder = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.putToJson(Urls.updateReviewBuilder, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    setShowToast(true, response.message);\n    return { success: true };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const deleteReviewBuilder = async (reviewId: string) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.delete(Urls.removeReviewBuilder + `?reviewId=${reviewId}`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    setShowToast(true, response.message);\n    return { success: true };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const getBuildersJob = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(Urls.getBuildersJob + `?builderId=${data.builderId}&page=${data.page}`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const tradieReviewReply = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(Urls.tradieReviewReply, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    setShowToast(true, response.message);\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const tradieUpdateReviewReply = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.putToJson(Urls.tradieUpdateReviewReply, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    setShowToast(true, response.message);\n    return { success: true };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const tradieRemoveReviewReply = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.delete(Urls.tradieRemoveReviewReply + `?reviewId=${data.reviewId}&replyId=${data.replyId}`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    setShowToast(true, response.message);\n    return { success: true };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const getBuilderProfile = async (builderId: any) => {\n  setSkeletonLoading(true);\n  const response: FetchResponse = await NetworkOps.get(Urls.builderProfile + `?builderId=${builderId}`);\n  setSkeletonLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result, status: response.status_code };\n  }\n  // setShowToast(true, response.message);\n  return { success: false, status: response.status_code };\n}\n\nexport const getActiveJobList = (page: number) => ({\n  type: actionTypes.GET_ACTIVE_JOBS_START,\n  page,\n});\n\nexport const getAppliedJobList = (page: number) => ({\n  type: actionTypes.GET_APPLIED_JOBS_START,\n  page,\n});\n\nexport const getPastJobList = (page: number) => ({\n  type: actionTypes.GET_PAST_JOBS_START,\n  page,\n});\n\nexport const resetActiveJobList = () => ({ type: actionTypes.RESET_ACTIVE_JOBS_START });\nexport const resetAppliedJobList = () => ({ type: actionTypes.RESET_APPLIED_JOBS_START });\nexport const resetPastJobList = () => ({ type: actionTypes.RESET_PAST_JOBS_START });\nexport const resetNewJobList = () => ({ type: actionTypes.RESET_NEW_JOBS_START });\nexport const resetApprovedMilestoneList = () => ({ type: actionTypes.RESET_APPROVED_MILESTONE_START });\n\nexport const getNewJobList = (page: number) => ({\n  type: actionTypes.GET_NEW_JOBS_START,\n  page,\n});\n\nexport const getApprovedMilestoneList = (page: number) => ({\n  type: actionTypes.GET_APPROVED_MILESTONE_START,\n  page,\n});\n\nexport const getActiveJobsBuilder = (page: number) => ({ type: actionTypes.GET_BUILDER_ACTIVE_JOBS, page });\nexport const getOpenJobsBuilder = (page: number) => ({ type: actionTypes.GET_BUILDER_OPEN_JOBS, page });\nexport const getPastJobsBuilder = (page: number) => ({ type: actionTypes.GET_BUILDER_PAST_JOBS, page });\nexport const getNewApplicantsBuilder = (page: number) => ({ type: actionTypes.GET_BUILDER_NEW_APPLICANTS, page });\nexport const getnewJobApplicationListBuilder = (item: any) => ({ type: actionTypes.GET_BUILDER_NEW_APPLICANTS_LIST, item });\nexport const getNewApprovalList = (page: any) => ({ type: actionTypes.GET_BUILDER_NEW_APPROVAL_LIST, page });\n\nexport const getMilestoneList = (jobId: string) => ({\n  type: actionTypes.GET_MILESTONES_START,\n  jobId,\n});\n\nexport const markMilestoneComplete = (data: any, callback: (jobCompletedCount: number) => void) => ({\n  type: actionTypes.MARK_MILESTONE_COMPLETE,\n  data,\n  callback,\n});\n\n\n// Tradie\n\n\nexport const getTradieReviewListOnBuilder = (data: any) => ({ type: actionTypes.GET_TRADIE_REVIEWS_LIST_ON_BUILDER, data })\nexport const getAcceptDeclineTradie = (data: any) => ({ type: actionTypes.GET_ACCEPT_DECLINE_TRADIE_REQUEST, data });\n\nexport const getQuestionsList = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(`${Urls.questionList}?jobId=${data?.jobId}&page=${data?.page}`)\n  setLoading(false);\n\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  return { success: false, data: response.result };\n}\n\n\nexport const answerQuestion = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(Urls.answerQuestion, data)\n  setLoading(false);\n  setShowToast(true, response.message);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n\n  return { success: false, data: response.result };\n}\n\nexport const askNestedQuestion = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(Urls.askNestedQuestion, data)\n  setLoading(false);\n  setShowToast(true, response.message);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n\n  return { success: false, data: response.result };\n}\n\nexport const updateAnswer = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.putToJson(Urls.updateAnswer, data)\n  setLoading(false);\n\n  setShowToast(true, response.message);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  return { success: false, data: response.result };\n}\n\nexport const deleteAnswer = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.delete(`${Urls.deleteAnswer}?questionId=${data.questionId}&answerId=${data.answerId}`)\n  setLoading(false);\n\n  setShowToast(true, response.message);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  return { success: false, data: response.result };\n}\n\nexport const reviewReply = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(Urls.reviewReply, data)\n  setLoading(false);\n\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  return { success: false, data: response.result };\n}\n\nexport const updateReviewReply = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.putToJson(Urls.updateReviewReply, data)\n  setLoading(false);\n\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  return { success: false, data: response.result };\n}\n\nexport const removeReviewReply = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.delete(`${Urls.removeReviewReply}?reviewId=${data.reviewId}&replyId=${data.replyId}`)\n  setLoading(false);\n\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  return { success: false, data: response.result };\n}\n\nexport const getTradeReviews = async (data: any) => {\n  //applying condition to get review list of tradie, when logged in either by tradie/builder\n  const userType: any = storageService.getItem('userType');\n  const reviewList: string = userType === 1 ? Urls.tradieProfileReviewList : Urls.reviewList;\n  const response: FetchResponse = await NetworkOps.get(reviewList + `?${userType === 1 ? 'builderId' : 'tradieId'}=${data.tradieId}&page=${data.page}`);\n  if (response?.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  return { success: false, data: response.result };\n}\n\nexport const getTradeProfile = async (data: any) => {\n  setSkeletonLoading(true);\n  const response: FetchResponse = await NetworkOps.get(Urls.tradieProfile + `?tradieId=${data.tradieId}&jobId=${data.jobId}`);\n  setSkeletonLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result, status: response.status_code };\n  }\n  return { success: false, status: response.status_code };\n}\n\n\nexport const ratingTradieProfile = async (data: any) => {\n  const response: FetchResponse = await NetworkOps.postToJson(Urls.reviewTradie, data);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false, data: response.result };\n}\n\n\nexport const getJobDetails = async (jobId: string) => {\n  setSkeletonLoading(true);\n  const response: FetchResponse = await NetworkOps.get(Urls.jobDetailsTradie + `?jobId=${jobId}`);\n  setSkeletonLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  return { success: false };\n}\n\n\nexport const lodgeDispute = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(`${Urls.jobBuilder}lodgeDispute`, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const tradielodgeDispute = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(Urls.tradieLodgeDispute, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const CancelJob = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.putToJson(`${Urls.jobBuilder}canceljob`, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message)\n  return { success: false };\n}\n\nexport const tradieCancelJob = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.putToJson(Urls.tradieCancelJob, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const InviteForJob = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.putToJson(`${Urls.jobBuilder}inviteForJob?tradieId=${data.tradieId}&jobId=${data.jobId}`, {});\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message)\n  return { success: false };\n}\n\nexport const CancelInviteForJob = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.putToJson(`${Urls.jobBuilder}cancelInviteForJob?tradieId=${data.tradieId}&jobId=${data?.jobId}&invitationId=${data.invitationId}`, {});\n  setLoading(false);\n  if (response.status_code === 200) {\n    setShowToast(true, response.message)\n    return { success: true, data: response.result };\n  }\n  return { success: false };\n}\n\nexport const changeRequest = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(`${Urls.jobBuilder}changeRequest`, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message)\n  return { success: false };\n}\n\nexport const replyCancellation = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(Urls.replyCancellation, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true };\n  }\n  return { success: false };\n}\n\nexport const replyChangeRequest = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(Urls.replyChangeRequest, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true };\n  }\n  return { success: false };\n}\nexport const acceptDeclineJobInvitation = async (data: any, isDisable?: boolean) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.putToJson(Urls.acceptDeclineJobInvitation, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    if (isDisable) return { success: true };\n    return { success: true, msg: response.message };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const SaveTradie = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(`${Urls.jobBuilder}saveTradie?tradieId=${data.tradieId}&isSave=${data.isSave}`,);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  return { success: false };\n}\n\n\nexport const HomeTradieProfile = async (data: any) => {\n  setSkeletonLoading(true);\n  const response: FetchResponse = await NetworkOps.get(`${Urls.jobHome}tradieProfile?tradieId=${data.tradieId}`,);\n  setSkeletonLoading(false);\n  if (response?.status_code === 200) {\n    return { success: true, data: response.result, status: response?.status_code };\n  }\n  return { success: false, status: response?.status_code };\n}\n\nexport const AddVoucher = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(`${Urls.jobBuilder}addVoucher`, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    setShowToast(true, response.message)\n    return { success: true, data: response.result };\n  }\n  return { success: false };\n}\n\nexport const ChooseJob = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(`${Urls.jobBuilder}chooseJob?page=${data.page}`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  return { success: false };\n}\n\nexport const getVouchers = async (data: any) => {\n  if (data.page === 1) { setLoading(true) }\n  const response: FetchResponse = await NetworkOps.get(storageService.getItem('userType') === 1 ? `${Urls.tradieProfileVoucher}?tradieId=${data.tradieId}&page=${data.page}` : `${Urls.jobBuilder}getVoucher?tradieId=${data.tradieId}&page=${data.page}`);\n  if (data.page === 1) { setLoading(false) }\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  return { success: false };\n}\n\nexport const republishJob = async (jobId: string) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(Urls.republishJob + `?jobId=${jobId}`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: {...response.result, isJobRepublish: true }};\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const getOpenJobDetails = async (jobId: string) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(`${Urls.job}/getOpenJobDetails?jobId=${jobId}`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result.resultData };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\n// Republish job \nexport const publishJobAgain = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(Urls.publishJobAgain, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\n\nexport const publishOpenJobAgain = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.putToJson(`${Urls.job}update`, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\n\nexport const handleCancelReply = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(`${Urls.jobBuilder}replyCancellation`, data);\n  setLoading(false);\n  // setShowToast(true, response?.message);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\n\nexport const invitedJobIds = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(`${Urls.home}invitedJobIds?tradieId=${data?.tradieId}&page=${data?.page}`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const getSavedTradies = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(`${Urls.profile}/builder/getSavedTradies?page=${data?.page}`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\n\n// PAYMENT ACTIONS\n\nexport const getCardList = async () => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(`${Urls.payment}builder/cardList`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const addNewCard = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(`${Urls.payment}builder/addNewCard`, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const payPayment = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.postToJson(`${Urls.payment}builder/pay`, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const updateCard = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.putToJson(`${Urls.payment}builder/updateCard`, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const deleteCard = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.delete(`${Urls.payment}builder/deleteCard`, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const lastUsedCard = async () => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(`${Urls.payment}builder/lastUsedCard`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  return { success: false };\n}\n\nexport const fetchVouchesJobs = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(`${Urls.job}builder/vouchesJob?page=${data.page}&tradieId=${data.tradieId}`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\n\nexport const updateTemplate = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.putToJson(`${Urls.job}editTemplate`, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\n// builder can update reviews on tradie profile\nexport const updateReviewTradie = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.putToJson(`${Urls.job}builder/updateReviewTradie`, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\n\n// builder can delete review on tradie profile\nexport const deleteReviewTradie = async (data: any) => {\n  setLoading(true)\n  const response: FetchResponse = await NetworkOps.delete(`${Urls.job}builder/removeReviewTradie?reviewId=${data?.reviewId}`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\n\n// builder can delete an open job\nexport const deleteOpenJob = async (data: any) => {\n  setLoading(true)\n  const response: FetchResponse = await NetworkOps.delete(`${Urls.job}remove?jobId=${data.jobId}`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\nexport const getJobsBWTradieBuilder = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(`${Urls.getChatJobList}?userId=${data?.oppUserId}&page=${data.page}&perPage=${data.perPage}&user_type=${data.user_type}`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, result: response.result };\n  }\n  return { success: false };\n}\n\n\nexport const getPopularTradies = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(`${Urls.home}getPopularTradie?long=${data?.long}&lat=${data?.lat}&page=${data?.page}&perPage=10`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  return { success: false };\n}\n\nexport const getRecommendedTradies = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(`${Urls.home}recommendedTradie?long=${data?.long}&lat=${data?.lat}&page=${data?.page}&perPage=10`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  return { success: false };\n}\n\nexport const getMostViewedTradies = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.get(`${Urls.home}mostViewedTradie?long=${data?.long}&lat=${data?.lat}&page=${data?.page}&perPage=10`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  return { success: false };\n}\n\nexport const closeOpenedJob = async (data: any) => {\n  setLoading(true);\n  const response: FetchResponse = await NetworkOps.putToJson(`${Urls.job}cancelOpenJob`, data);\n  setLoading(false);\n  if (response.status_code === 200) {\n    return { success: true, data: response.result };\n  }\n  setShowToast(true, response.message);\n  return { success: false };\n}\n\n// https://ticktdevapi.appskeeper.in/v1/home/getPopularTradie?long=144.9631&lat=-37.8136&page=1&perPage=10\n"],"sourceRoot":""}